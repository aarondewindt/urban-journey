<?xml version="1.0"?>
<dtsml version="1.2.3">
    <vehicle name="Stratos II+" version="1.0" OnStart="print('Simulation started')" OnEnd="print('Simulation ended')">
        Example dstml file for the Stratos II+ Rocket
    </vehicle>

    <?python
import numpy as np
import dtsml.Lib as lib
?>

    <!-- DATCOM entry to estimate aerodynamic coefficients-->
    <datcom filename='data/aerodata_stage1_engine_off.p'>
        <caseid>stratos ii</caseid>
        <dim>m</dim>
        <deriv>rad</deriv>
        <refq>
            <xcg>[0]</xcg>
            <sref>[0.031]</sref>
            <lref>[0.2]</lref>
            <latref>[0.2]</latref>
            <rhr>400</rhr>
        </refq>
        <fltcon>
            <alpha>[-10,-9,-8,-7,-6,-5,-4,-3,-2,-1.5,-1,-0.5,-0.1,0,0.1,0.5,1,1.5,2,3,4,5,6,7,8,9,10]</alpha>
            <beta>[-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10]</beta>
            <mach>[0.1,0.2,0.4,0.6,0.8,1,1.2,1.4,1.6,1.8,2,2.2,2.4,2.6,2.8,3,3.1]</mach>
            <alt>
                [37000,37000,37000,37000,35000,34000,31600,29000,26800,24000,21400,18600,15000,12900,9200,10000,10400]
            </alt>
        </fltcon>
        <axibod>
            <nx>14</nx>
            <x>[0,0.05,0.10,0.15,0.20,0.25,0.30,0.35,0.40,0.45,0.50,1.427,1.533,6.918]</x>
            <r>[0,0.0164,0.031,0.0438,0.0548,0.0642,0.0720,0.0778,0.0822,0.0846,0.0858,0.0858,0.1,0.1]</r>
            <discon>[11,12,13]</discon>
        </axibod>
        <finset1>
            <sectyp>hex</sectyp>
            <npanel>4</npanel>
            <xle>[6.418,6.716]</xle>
            <sspan>[0,0.24]</sspan>
            <chord>[0.50,0.111]</chord>
            <zupper>[0.005,0.005]</zupper>
            <zlower>[0.0225, 0.0225]</zlower>
            <lmaxu>[0.02, 0.09]</lmaxu>
            <lflatu>[0.96, 0.819]</lflatu>
            <ler>[0.000,0.000]</ler>
            <phif>[45,135,225,315]</phif>
        </finset1>
        <deflct>
            <delta1>[[0.0],[0],[0]]</delta1>
        </deflct>
    </datcom>

    <!-- Load the aerodynamic data generated by Missile DATCOM -->
    <data name="Mass" file='data/mass.csv' delimiter=','/>
    <data name="aeroData_stage1_engine_off" file="data/aeroData_stage1_engine_off.p"/>
    <data name="aeroData_stage1_engine_on" file="data/aeroData_stage1_engine_on.p"/>

    <?python
    def on_step_engine_burn():
        if(Core.si.t > 23):
            Core.changePhase()

    def on_step_coasting():
        if(Core.si.t > 100):
            Core.changePhase()

    def on_step_drogue():
        if(Core.si.lla[2,0] < 2000):
            Core.changePhase()
            ?>

    <!-- Definition of the first phase (engine burn) -->
    <phase name="Engine Burn" on_start="print('Engine burning...')" on_step="on_step_engine_burn()">
        <!-- Setup the fixed step integrator -->
        <integrator name="AB3">
            <dt>0.01</dt>
        </integrator>

        <initialize>
            <vehicle_cg>np.array([[-4.151],[0],[0]])
                        next_line()</vehicle_cg>
            <vehicle_inertia>np.array([[1.212,0,0],[0,620.520,0],[0,0,620.520]])</vehicle_inertia>
        </initialize>

        <aero_datcom alphac='False'>
            <aero_table>Data['aeroData_stage1_engine_on']</aero_table>
        </aero_datcom>

        <!-- Set the wind module -->
        <wind_logarithmic>
            <v>3</v>
            <heading>180</heading>
        </wind_logarithmic>
    </phase>

    <phase name="Drogue parachute" on_start="print('Drogue parachute phase!')" on_step="#on_step_drogue()">
        <aero_simple_parachute>
            <sref>1.15</sref>
            <cd_table>np.array([[0.0,0.5],
                [0.5,0.5],
                [1.0,0.5],
                [1.5,0.55],
                [2.0,0.4],
                [3.0,0.3],
                [5.0,0.2]])
            </cd_table>
        </aero_simple_parachute>
    </phase>
</dtsml>
